import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

class Room {
    private String roomNumber;
    private String category;
    private boolean isAvailable;

    public Room(String roomNumber, String category) {
        this.roomNumber = roomNumber;
        this.category = category;
        this.isAvailable = true;
    }

    public String getRoomNumber() {
        return roomNumber;
    }

    public String getCategory() {
        return category;
    }

    public boolean isAvailable() {
        return isAvailable;
    }

    public void setAvailable(boolean available) {
        isAvailable = available;
    }
}

class Booking {
    private String bookingId;
    private Room room;
    private String guestName;
    private double payment;

    public Booking(String bookingId, Room room, String guestName, double payment) {
        this.bookingId = bookingId;
        this.room = room;
        this.guestName = guestName;
        this.payment = payment;
    }

    public String getBookingId() {
        return bookingId;
    }

    public Room getRoom() {
        return room;
    }

    public String getGuestName() {
        return guestName;
    }

    public double getPayment() {
        return payment;
    }
}

public class HotelReservationSystem {
    private List<Room> rooms;
    private Map<String, Booking> bookings;
    private Scanner scanner;

    public HotelReservationSystem() {
        this.rooms = new ArrayList<>();
        this.bookings = new HashMap<>();
        this.scanner = new Scanner(System.in);

        // Initialize rooms
        rooms.add(new Room("101", "Single"));
        rooms.add(new Room("102", "Double"));
        rooms.add(new Room("103", "Suite"));
        rooms.add(new Room("104", "Single"));
        rooms.add(new Room("105", "Double"));
    }

    public void run() {
        while (true) {
            System.out.println("1. Search for available rooms");
            System.out.println("2. Make a reservation");
            System.out.println("3. View booking details");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");
            int option = scanner.nextInt();

            switch (option) {
                case 1:
                    searchRooms();
                    break;
                case 2:
                    makeReservation();
                    break;
                case 3:
                    viewBookingDetails();
                    break;
                case 4:
                    System.out.println("Exiting...");
                    return;
                default:
                    System.out.println("Invalid option. Please choose again.");
            }
        }
    }

    private void searchRooms() {
        System.out.print("Enter room category: ");
        String category = scanner.next();

        System.out.println("Available rooms:");
        for (Room room : rooms) {
            if (room.getCategory().equals(category) && room.isAvailable()) {
                System.out.println(room.getRoomNumber());
            }
        }
    }

    private void makeReservation() {
        System.out.print("Enter room number: ");
        String roomNumber = scanner.next();
        System.out.print("Enter guest name: ");
        String guestName = scanner.next();
        System.out.print("Enter payment amount: ");
        double payment = scanner.nextDouble();

        for (Room room : rooms) {
            if (room.getRoomNumber().equals(roomNumber) && room.isAvailable()) {
                room.setAvailable(false);
                String bookingId = "BK" + (bookings.size() + 1);
                Booking booking = new Booking(bookingId, room, guestName, payment);
                bookings.put(bookingId, booking);
                System.out.println("Reservation made successfully. Booking ID: " + bookingId);
                return;
            }
        }
        System.out.println("Room not available");
    }

    private void viewBookingDetails() {
        System.out.print("Enter booking ID: ");
        String bookingId = scanner.next();

        if (bookings.containsKey(bookingId)) {
            Booking booking = bookings.get(bookingId);
            System.out.println("Booking ID: " + booking.getBookingId());
            System.out.println("Room Number: " + booking.getRoom().getRoomNumber());
            System.out.println("Guest Name: " + booking.getGuestName());
            System.out.println("Payment: " + booking.getPayment());
        } else {
            System.out.println("Invalid booking ID");
        }
    }

    public static void main(String[] args) {
        HotelReservationSystem system = new HotelReservationSystem();
        system.run();
    }
}


//Output

1. Search for available rooms
2. Make a reservation
3. View booking details
4. Exit
Choose an option: 1
Enter room category: Single
Available rooms:
101
104

1. Search for available rooms
2. Make a reservation
3. View booking details
4. Exit
Choose an option: 2
Enter room number: 101
Enter guest name: John Doe
Enter payment amount: 100
Reservation made successfully. Booking ID: BK1

1. Search for available rooms
2. Make a reservation
3. View booking details
4. Exit
Choose an option: 3
Enter booking ID: BK1
Booking ID: BK1
Room Number: 101
Guest Name: John Doe
Payment: 100.0

1. Search for available rooms
2. Make a reservation
3. View booking details
4. Exit
Choose an option: 2
Enter room number: 102
Enter guest name: Jane Smith
Enter payment amount: 150
Reservation made successfully. Booking ID: BK2

1. Search for available rooms
2. Make a reservation
3. View booking details
4. Exit
Choose an option: 3
Enter booking ID: BK2
Booking ID: BK2
Room Number: 102
Guest Name: Jane Smith
Payment: 150.0

1. Search for available rooms
2. Make a reservation
3. View booking details
4. Exit
Choose an option: 4
Exiting...
